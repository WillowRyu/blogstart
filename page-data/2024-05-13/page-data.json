{"componentChunkName":"component---src-templates-blog-post-js","path":"/2024-05-13/","result":{"data":{"site":{"siteMetadata":{"title":"FE Factory"}},"markdownRemark":{"id":"a4748836-d6c1-5517-903b-427d741087fe","excerpt":"원래 주제는 다른 글 이지만, 본론을 올리기 전 간단하게 JS Quiz 를 보며 refresh 를 해보자. Quiz.1 해당 console.log 의 output 을 어떤값일까? . . . . . . . . . . . . . . . . . Quiz 1 해설 다양한 생각이 있겠지만 JS…","html":"<p>원래 주제는 다른 글 이지만, 본론을 올리기 전 간단하게 JS Quiz 를 보며<br>\nrefresh 를 해보자.</p>\n<h2>Quiz.1</h2>\n<deckgo-highlight-code language=\"javascript\"  >\n          <code slot=\"code\">console.log(018 - 015)</code>\n        </deckgo-highlight-code>\n<p>해당 console.log 의 output 을 어떤값일까?</p>\n<ol>\n<li>\n<span style=\"color:#87CEEB\">\nNaN\n</span>\n</li>\n<li>\n<span style=\"color:#87CEEB\">\n3\n</span>\n</li>\n<li>\n<span style=\"color:#87CEEB\">\n5\n</span>\n</li>\n<li>\n<span style=\"color:#87CEEB\">\n13\n</span>\n</li>\n</ol>\n<p>.<br>\n.<br>\n.<br>\n.<br>\n.<br>\n.<br>\n.<br>\n.<br>\n.<br>\n.<br>\n.<br>\n.<br>\n.<br>\n.<br>\n.<br>\n.<br>\n.</p>\n<h4>Quiz 1 해설</h4>\n<p>다양한 생각이 있겠지만 JS 에서는 앞에 0이 붙으면 <code class=\"language-text\">Oct(8진수)</code> 로 계산이 된다.<br>\n8진수는 각자리에서 8의 거듭제곱을 곱하고, 그 결과를 다 더해야 한다.</p>\n<p>이제 각 값을 10진수로 변환하면?</p>\n<ul>\n<li>018 은 8진수로 나타낼수 없다. 8진수는 0~7로만 이루어져 있다.<br>\n결국 018 은 10진수 18이 된다.</li>\n<li>015 는 8진수로 변환시 각 자리에 8의 거듭제곱을 곱한 뒤 더하면 0 + 8 + 5 = 13 이 된다.</li>\n</ul>\n<p>그럼 각 결과를 더하면 18 - 13, 즉 정답은 5가 된다.<br>\n답은 <code class=\"language-text\">3번</code>이다.</p>\n<blockquote>\n<p>js 에서 <code class=\"language-text\">strict mode</code> 일때는 0을 붙였을시 표기 오류가 난다.<br>\n그때는 <code class=\"language-text\">0o</code>를 붙여 8진수를 표현 할수 있다.</p>\n</blockquote>\n<h2>Quiz. 2</h2>\n<deckgo-highlight-code language=\"javascript\"  >\n          <code slot=\"code\">console.log(typeof typeof 1)</code>\n        </deckgo-highlight-code>\n<p>해당 console.log 의 output 을 어떤값일까?</p>\n<ol>\n<li>\n<span style=\"color:#87CEEB\">\nstring\n</span>\n</li>\n<li>\n<span style=\"color:#87CEEB\">\nnumber\n</span>\n</li>\n<li>\n<span style=\"color:#87CEEB\">\n1\n</span>\n</li>\n<li>\n<span style=\"color:#87CEEB\">\ntrue\n</span>\n</li>\n</ol>\n<p>.<br>\n.<br>\n.<br>\n.<br>\n.<br>\n.<br>\n.<br>\n.<br>\n.<br>\n.<br>\n.<br>\n.<br>\n.<br>\n.<br>\n.<br>\n.<br>\n.</p>\n<h4>Quiz 2 해설</h4>\n<p>이 어느정도 JS 를 해봤다면 아주 쉬울 것이다.<br>\nJS 의 <code class=\"language-text\">typeof</code> 는 주어진 변수의 데이터 타입을 string 형식으로 반환하게 된다.</p>\n<p>그럼 해당 문제를 하나씩 뜯어보면 <code class=\"language-text\">typeof 1</code> 은 <code class=\"language-text\">\"number\"</code> 가 나오게 되고<br>\n<code class=\"language-text\">typeof \"number\"</code> 은 <code class=\"language-text\">\"string\"</code> 이 된다.</p>\n<p>답은 <code class=\"language-text\">1번</code> 이다.</p>\n<h2>Quiz. 3</h2>\n<deckgo-highlight-code language=\"javascript\"  >\n          <code slot=\"code\">const numbers = [33, 2, 8]\nnumbers.sort()\nconsole.log(numbers[1])</code>\n        </deckgo-highlight-code>\n<p>해당 console.log 의 output 을 어떤값일까?</p>\n<ol>\n<li>\n<span style=\"color:#87CEEB\">\n33\n</span>\n</li>\n<li>\n<span style=\"color:#87CEEB\">\n2\n</span>\n</li>\n<li>\n<span style=\"color:#87CEEB\">\n8\n</span>\n</li>\n<li>\n<span style=\"color:#87CEEB\">\n1\n</span>\n</li>\n</ol>\n<p>.<br>\n.<br>\n.<br>\n.<br>\n.<br>\n.<br>\n.<br>\n.<br>\n.<br>\n.<br>\n.<br>\n.<br>\n.<br>\n.<br>\n.<br>\n.<br>\n.</p>\n<h4>Quiz 3 해설</h4>\n<p>이 문제를 못 맞춘다면…<br>\nJs를 다뤄봤다면 아주 쉬운 문제이다.</p>\n<p>정답은 <code class=\"language-text\">1번</code> 이다.<br>\n해설은 따로 없다.</p>\n<blockquote>\n<p>Js 에서 sort 는 요소들을 문자열로 변경하여 정렬한다.</p>\n</blockquote>\n<h2>Quiz. 4</h2>\n<deckgo-highlight-code language=\"javascript\"  >\n          <code slot=\"code\">console.log(false == &quot;0&quot;)</code>\n        </deckgo-highlight-code>\n<p>해당 console.log 의 output 을 어떤값일까?</p>\n<ol>\n<li>\n<span style=\"color:#87CEEB\">\nfalse\n</span>\n</li>\n<li>\n<span style=\"color:#87CEEB\">\ntrue\n</span>\n</li>\n</ol>\n<p>.<br>\n.<br>\n.<br>\n.<br>\n.<br>\n.<br>\n.<br>\n.<br>\n.<br>\n.<br>\n.<br>\n.<br>\n.<br>\n.<br>\n.<br>\n.<br>\n.</p>\n<h4>Quiz 4 해설</h4>\n<p>여기는 약간 헷갈릴수 있다.<br>\n<code class=\"language-text\">==</code> 와 <code class=\"language-text\">===</code> 의 차이를 생각하고 진행사항을 보자.</p>\n<p><code class=\"language-text\">==</code> 는 값을 비교할때 자동으로 두 값의 형변환을 진행하게 된다.<br>\nNumber(false) 는 0 으로 변환되어 <code class=\"language-text\">0 == \"0\"</code> 이 된다.<br>\n여기서 <code class=\"language-text\">\"0\"</code> 은 다시 형변환 되어 <code class=\"language-text\">Number(\"0\")</code> 즉 0 이 된다.</p>\n<p>결론적으로 <code class=\"language-text\">0 == 0</code>이 되므로 결과값은 true 로 나오게 된다.<br>\n답은 <code class=\"language-text\">2번</code> 이다.</p>\n<blockquote>\n<p>만약 <code class=\"language-text\">===</code> 으로 비교한다면 값과 함께 유형검사도 하기 때문에 <code class=\"language-text\">false</code> 가 나온다.</p>\n</blockquote>\n<h2>Quiz. 5</h2>\n<deckgo-highlight-code language=\"javascript\"  >\n          <code slot=\"code\">console.log(0.1 + 0.2 == 0.3)</code>\n        </deckgo-highlight-code>\n<p>해당 console.log 의 output 을 어떤값일까?</p>\n<ol>\n<li>\n<span style=\"color:#87CEEB\">\nfalse\n</span>\n</li>\n<li>\n<span style=\"color:#87CEEB\">\ntrue\n</span>\n</li>\n</ol>\n<p>.<br>\n.<br>\n.<br>\n.<br>\n.<br>\n.<br>\n.<br>\n.<br>\n.<br>\n.<br>\n.<br>\n.<br>\n.<br>\n.<br>\n.<br>\n.<br>\n.</p>\n<h4>Quiz 5 해설</h4>\n<p>이건 유명한 문제이며 원인은 부동소수점 숫자를 표현하는 데 <code class=\"language-text\">IEEE 754</code> 표준을 사용하기 때문이다.<br>\nJS만 그렇지 않고 많은 언어들이 이를 따르고 있다.<br>\n이 표준은 실수를 2진수로 정확히 표현하지 못하기 때문에 최대한 그에 근접한 값으로 변환하여 사용한다.</p>\n<p>그래서 0.1 + 0.2 는 0.3 이 아니고 (ex 0.30000000000004) 약간의 차이가 생기게 된다.<br>\n하여 정답은 <code class=\"language-text\">1번</code> 이다.</p>\n<blockquote>\n<p>JS 에서 이런 부분을 막기 위한 방법 중 한나로 <code class=\"language-text\">Number.EPSILON</code>을 활용하는 방법이 있다.<br>\n<code class=\"language-text\">Number.EPSILON</code> 은 2의 -52승 의 값을 나타낸다.\n해당 공식의 결과가 EPSILON 보다 작다면 이는 true 로 볼 수 있다.</p>\n</blockquote>\n<h2>Quiz. 6</h2>\n<deckgo-highlight-code language=\"javascript\"  >\n          <code slot=\"code\">let array = [1, 2, 3]\narray[6] = 9\nconsole.log(array[5])</code>\n        </deckgo-highlight-code>\n<p>해당 console.log 의 output 을 어떤값일까?</p>\n<ol>\n<li>\n<span style=\"color:#87CEEB\">\n1\n</span>\n</li>\n<li>\n<span style=\"color:#87CEEB\">\n2\n</span>\n</li>\n<li>\n<span style=\"color:#87CEEB\">\n9\n</span>\n</li>\n<li>\n<span style=\"color:#87CEEB\">\nundefined\n</span>\n</li>\n</ol>\n<p>.<br>\n.<br>\n.<br>\n.<br>\n.<br>\n.<br>\n.<br>\n.<br>\n.<br>\n.<br>\n.<br>\n.<br>\n.<br>\n.<br>\n.<br>\n.<br>\n.</p>\n<h4>Quiz 6 해설</h4>\n<p>Js 에서 Array의 length 를 벗어나는 position 에 값을 할당할 경우<br>\nJs 는 자동으로 빈부분을 채우게 된다.<br>\n당연히 값이 없으니 undefined 로 채워지게 되고<br>\n답은 <code class=\"language-text\">4번</code> 이 된다.</p>\n<h2>Quiz. 7</h2>\n<deckgo-highlight-code language=\"javascript\"  >\n          <code slot=\"code\">const isTrue = true == []\nconst isFalse = true == ![]\n\nconsole.log(isTrue + isFalse)</code>\n        </deckgo-highlight-code>\n<p>해당 console.log 의 output 을 어떤값일까?</p>\n<ol>\n<li>\n<span style=\"color:#87CEEB\">\n1\n</span>\n</li>\n<li>\n<span style=\"color:#87CEEB\">\n0\n</span>\n</li>\n<li>\n<span style=\"color:#87CEEB\">\n\"true\"\n</span>\n</li>\n<li>\n<span style=\"color:#87CEEB\">\ntrue\n</span>\n</li>\n</ol>\n<p>.<br>\n.<br>\n.<br>\n.<br>\n.<br>\n.<br>\n.<br>\n.<br>\n.<br>\n.<br>\n.<br>\n.<br>\n.<br>\n.<br>\n.<br>\n.<br>\n.</p>\n<h4>Quiz. 7 해설</h4>\n<p><code class=\"language-text\">const isTrue</code> 를 살펴보면<br>\n빈배열은 형변환이 되며 ”[]” 이건 \"\" 이렇게 빈문자열로 변환된다.<br>\n그리고 true 역시 형변환이 되며 true 는 숫자 1 이 된다.</p>\n<p>이제 <code class=\"language-text\">1 == \"\"</code> 이런식으로 되었는데 빈문자열은 false, 즉 형변환을 하게 되면 숫자 0이 된다.<br>\n결국 <code class=\"language-text\">1 == 0</code> 이 되므로 isTrue 의 값은 <code class=\"language-text\">false</code> 이다.</p>\n<p><code class=\"language-text\">const isFalse</code> 를 살펴보면<br>\n![] 이부분은 Js 에서 기본적으로 빈배열은 truthy 값으로 평가 되기 때문에<br>\ntrue 를 ! 로 논리 부정을 적용하면 false 가 된다.</p>\n<p>false 는 형변환으로 숫자 0이 되고,<br>\ntrue 는 위와 같이 숫자 1로 변환되기 때문에 결국 <code class=\"language-text\">1 == 0</code> 이 되고<br>\n값은 <code class=\"language-text\">false</code>가 된다.</p>\n<p>결국 isTrue 도 false 고 isFalse 도 false 가 되고,\nisTrue + isFalse 는 false + false 가 되고 형변환이 이뤄지면<br>\n<code class=\"language-text\">0 + 0</code> 즉 결과는 0이 나오게 된다.</p>\n<p>정답은 <code class=\"language-text\">2번</code></p>\n<h2>Quiz. 8</h2>\n<deckgo-highlight-code language=\"javascript\"  >\n          <code slot=\"code\">console.log(1 + &quot;2&quot; + &quot;2&quot;)</code>\n        </deckgo-highlight-code>\n<p>해당 console.log 의 output 을 어떤값일까?</p>\n<ol>\n<li>\n<span style=\"color:#87CEEB\">\n122\n</span>\n</li>\n<li>\n<span style=\"color:#87CEEB\">\n32\n</span>\n</li>\n<li>\n<span style=\"color:#87CEEB\">\nNaN2\n</span>\n</li>\n<li>\n<span style=\"color:#87CEEB\">\nNaN\n</span>\n</li>\n</ol>\n<p>.<br>\n.<br>\n.<br>\n.<br>\n.<br>\n.<br>\n.<br>\n.<br>\n.<br>\n.<br>\n.<br>\n.<br>\n.<br>\n.<br>\n.<br>\n.<br>\n.</p>\n<h4>Quiz. 8 해설</h4>\n<p>Js 에서 ”+” operator 는 왼쪽에서 오른쪽으로 형변환을 시도하게 된다.<br>\n1 + “2” 라는 건 “2” 의 타입이 string 이기 때문에 1은 “1” 로 변환되고<br>\n결국 “1” + “2” 는 “12” 가 된다.</p>\n<p>여기서 “12” + “2” 를 하게 되면 string 을 그대로 합치기 떄문에<br>\n“122” 가 결과로 나오게 된다.</p>\n<p>정답은 <code class=\"language-text\">1번</code> 이다.</p>\n<h2>Quiz. 9</h2>\n<deckgo-highlight-code language=\"javascript\"  >\n          <code slot=\"code\">console.log(String.raw`HelloTwitter\\nworld`)</code>\n        </deckgo-highlight-code>\n<p>해당 console.log 의 output 을 어떤값일까?</p>\n<ol>\n<li>\n<span style=\"color:#87CEEB\">\n\"HelloTwitter\\nworld\"\n</span>\n</li>\n<li>\n<span style=\"color:#87CEEB; white-space:pre;\">\n\"HelloTwitter\nworld\"\n</span>\n</li>\n<li>\n<span style=\"color:#87CEEB\">\n\"HelloTwitter world\"\n</span>\n</li>\n<li>\n<span style=\"color:#87CEEB\">\n\"Hello Twitter world\"\n</span>\n</li>\n</ol>\n<p>.<br>\n.<br>\n.<br>\n.<br>\n.<br>\n.<br>\n.<br>\n.<br>\n.<br>\n.<br>\n.<br>\n.<br>\n.<br>\n.<br>\n.<br>\n.<br>\n.</p>\n<h4>Quiz. 9 해설</h4>\n<p>String.raw 는 문자열 내부 이스케이프 시퀀스를 무시하고 원시 문자열 데이터를<br>\n그대로 반환하게 된다.</p>\n<p>여기서 ‘\\n’ 은 원래라면 new line 으로 해석되어야 하지만 String.raw 로 인해<br>\n그대로 출력되어 정답은 HelloTwitter\\nworld 그대로 값이 나오게 된다.</p>\n<p>답은 <code class=\"language-text\">1번</code> 이다.</p>\n<h2>Quiz. 10</h2>\n<deckgo-highlight-code language=\"javascript\"  >\n          <code slot=\"code\">console.log(&quot;This is a string.&quot; instanceof String)</code>\n        </deckgo-highlight-code>\n<p>해당 console.log 의 output 을 어떤값일까?</p>\n<ol>\n<li>\n<span style=\"color:#87CEEB\">\ntrue\n</span>\n</li>\n<li>\n<span style=\"color:#87CEEB\">\nfalse\n</span>\n</li>\n</ol>\n<p>.<br>\n.<br>\n.<br>\n.<br>\n.<br>\n.<br>\n.<br>\n.<br>\n.<br>\n.<br>\n.<br>\n.<br>\n.<br>\n.<br>\n.<br>\n.<br>\n.</p>\n<h4>Quiz. 10 해설</h4>\n<p>instanceof 는 주어진 객체가 특정 클래스 또는 생성자의 인스턴스 인지 확인한다.<br>\n해당 객체의 prototype 체인을 거슬러 올라가서 확인하기 떄문에<br>\n“This is a string” 의 생성자를 생각해보자.</p>\n<p>String 객체일가? 과연<br>\n“This is a string” 의 타입을 생각해보자. 원시타입 string 이다.<br>\n원시타입 string 은 String 객체에 의해 생성되지 않았기 때문에<br>\n결과값은 false 가 나온다.</p>\n<p>정답은 <code class=\"language-text\">2번</code> 이다.</p>\n<blockquote>\n<p>여기서 true 가 나오려면 <code class=\"language-text\">new String(\"This is a string.\")</code> 이 되어야 한다.</p>\n</blockquote>\n<p>오늘 준비한건 여기까지, 크게 중요치 않지만<br>\n그냥 갑자기 보여서 오랜만에 퀴즈를 풀어봤다.</p>","frontmatter":{"title":"JS Quiz","date":"May 14, 2024","description":"쉬어가는 시간"}}},"pageContext":{"slug":"/2024-05-13/","previous":{"fields":{"slug":"/2023-11-25/"},"frontmatter":{"title":"Tailwindcss with MFA"}},"next":{"fields":{"slug":"/2024-05-18/"},"frontmatter":{"title":"The New Generation of JavaScript"}}}},"staticQueryHashes":["2841359383","3490846071"]}